ws1s;

pred intersects_1(var2 X, Y) =
  (ex1 x: (x in X) & (x in Y));

pred included_1(var2 X, Y) =
  (all1 x: (x in X) => (x in Y));

pred intersects_4
  (var2 X_1, X_2, X_3, X_4,
   var2 Y_1, Y_2, Y_3, Y_4) =
   intersects_1(X_1, Y_1) |
   intersects_1(X_2, Y_2) |
   intersects_1(X_3, Y_3) |
   intersects_1(X_4, Y_4);

pred uniquely_intersects_4
  (var2 X_1, X_2, X_3, X_4,
   var2 Y_1, Y_2, Y_3, Y_4) =
  (ex1 x: (
( (x in X_1 & x in Y_1) &
 ~(x in X_2 & x in Y_2) &
 ~(x in X_3 & x in Y_3) &
 ~(x in X_4 & x in Y_4)) |
(~(x in X_1 & x in Y_1) &
  (x in X_2 & x in Y_2) &
 ~(x in X_3 & x in Y_3) &
 ~(x in X_4 & x in Y_4)) |
(~(x in X_1 & x in Y_1) &
 ~(x in X_2 & x in Y_2) &
  (x in X_3 & x in Y_3) &
 ~(x in X_4 & x in Y_4)) |
(~(x in X_1 & x in Y_1) &
 ~(x in X_2 & x in Y_2) &
 ~(x in X_3 & x in Y_3) &
  (x in X_4 & x in Y_4)))
& (all1 y:
((y in X_1 & y in Y_1) |
 (y in X_2 & y in Y_2) |
 (y in X_3 & y in Y_3) |
 (y in X_4 & y in Y_4)) => x = y));

pred partition_3
  (var2 Y, X_1, X_2, X_3) =
  (all1 x: x in Y <=>
    (x in X_1 | x in X_2 | x in X_3))  &
  ~intersects_1(X_1, X_2) &
  ~intersects_1(X_1, X_3) &
  ~intersects_1(X_2, X_3);

pred partition_2
  (var2 Y, X_1, X_2) =
  (all1 x: x in Y <=>
    (x in X_1 | x in X_2))  &
  ~intersects_1(X_1, X_2);

pred partition_1
  (var2 Y, X_1) =
  (all1 x: x in Y <=>
    (x in X_1)) 
;

pred one_transition_flow_2
  (var1 z1, var2 X1, Y1,
   var1 z2, var2 X2, Y2) =
   (z1 notin X1 & z2 notin X2  &  z1 notin Y1 & z2 notin Y2) |

   (z1    in X1 & z2 notin X2  &  z1    in Y1 & z2 notin Y2) |
   (z1    in X1 & z2 notin X2  &  z1 notin Y1 & z2    in Y2) |
   (z1 notin X1 & z2    in X2  &  z1    in Y1 & z2 notin Y2) |
   (z1 notin X1 & z2    in X2  &  z1 notin Y1 & z2    in Y2) |

   (z1    in X1 & z2    in X2);

pred one_transition_flow_3
  (var1 z1, var2 X1, Y1,
   var1 z2, var2 X2, Y2,
   var1 z3, var2 X3, Y3) =
   (z1 notin X1 & z2 notin X2 & z3 notin X3  &  z1 notin Y1 & z2 notin Y2 & z3 notin Y3) |

   (z1    in X1 & z2 notin X2 & z3 notin X3  &  z1    in Y1 & z2 notin Y2 & z3 notin Y3) |
   (z1    in X1 & z2 notin X2 & z3 notin X3  &  z1 notin Y1 & z2    in Y2 & z3 notin Y3) |
   (z1    in X1 & z2 notin X2 & z3 notin X3  &  z1 notin Y1 & z2 notin Y2 & z3    in Y3) |
   (z1 notin X1 & z2    in X2 & z3 notin X3  &  z1    in Y1 & z2 notin Y2 & z3 notin Y3) |
   (z1 notin X1 & z2    in X2 & z3 notin X3  &  z1 notin Y1 & z2    in Y2 & z3 notin Y3) |
   (z1 notin X1 & z2    in X2 & z3 notin X3  &  z1 notin Y1 & z2 notin Y2 & z3    in Y3) |
   (z1 notin X1 & z2 notin X2 & z3    in X3  &  z1    in Y1 & z2 notin Y2 & z3 notin Y3) |
   (z1 notin X1 & z2 notin X2 & z3    in X3  &  z1 notin Y1 & z2    in Y2 & z3 notin Y3) |
   (z1 notin X1 & z2 notin X2 & z3    in X3  &  z1 notin Y1 & z2 notin Y2 & z3    in Y3) |

   (z1    in X1 & z2    in X2              ) |
   (z1    in X1               & z3    in X3) |
   (              z2    in X2 & z3    in X3);


#
# backbone tree
#



pred backbone_tree
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2) =
  (ex2 U:
    partition_3
      (U, U_Master_a0, U_Slave_a1, U_Slave_a2) &
    (all1 u : (u ~= 0 & u in U) => (u-1 in U) ) &
    (all1 u: (u in U_Master_a0) => (
        (u+1 in U_Slave_a1)  | 
        (u+1 in U_Slave_a2) 
      )) &
    (all1 u: (u in U_Slave_a1) => (
        (u+1 in U_Slave_a1)  | 
        (u+1 in U_Slave_a2) 
      )) &
    (all1 u: (u in U_Slave_a2) =>
        (u+1 notin U)) &
    (0 in U_Master_a0)
  );


#
# ext / configurations
#



pred ext_configuration
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
   backbone_tree
     (U_Master_a0, U_Slave_a1, U_Slave_a2) &
   (all1 x : x in X_m_q0 =>
      (x in U_Master_a0)) &
   (all1 x : x in X_m_q1 =>
      (x in U_Master_a0)) &
   (all1 x : x in X_s_q0 =>
      (x in U_Slave_a1 | x in U_Slave_a2)) &
   (all1 x : x in X_s_q1 =>
      (x in U_Slave_a1 | x in U_Slave_a2));

pred configuration
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
   ext_configuration
     (U_Master_a0, U_Slave_a1, U_Slave_a2,
      X_m_q0, X_m_q1, X_s_q0, X_s_q1) &
   (all1 x: x in U_Master_a0 =>
     (x in X_m_q0 | x in X_m_q1)) &
   (all1 x: x in U_Slave_a1 =>
     (x in X_s_q0 | x in X_s_q1)) &
   (all1 x: x in U_Slave_a2 =>
     (x in X_s_q0 | x in X_s_q1)) & 
   ~intersects_1(X_m_q0, X_m_q1) &
   ~intersects_1(X_s_q0, X_s_q1);


#
# backbone tree paths
#





pred path_Master_a0_s_Slave_a1_s
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var1 u0, u1) =
   backbone_tree
     (U_Master_a0, U_Slave_a1, U_Slave_a2) &
   ex2 W_Master_a0_s, W_Slave_a1_s :
   ex2 W_up, W_down :
   ex1 w_top :
     included_1(W_Master_a0_s, U_Master_a0) &
     included_1(W_Slave_a1_s, U_Slave_a1) &
     ~intersects_1(W_down, W_up) &
     partition_2(W_down, W_Master_a0_s, W_Slave_a1_s) &
     (w_top in W_down) &
     (0 in W_down => w_top = 0) &
     (all1 w : (w in W_down & w ~= w_top) => w-1 in W_down) &
     (all1 w1, w2: (w1 in W_down & w1 ~= 0 &
                    w2 in W_down & w2 ~= 0 & w1-1 = w2-1) => w1 = w2) &
     (all1 w: (w in W_Master_a0_s) =>
       (w+1 in W_Slave_a1_s)) &
     u0 in W_Master_a0_s &
     u1 in W_Slave_a1_s &
     (all1 w : w in W_Slave_a1_s => w = u1);


pred path_Master_a0_s_Slave_a2_s
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var1 u0, u1) =
   backbone_tree
     (U_Master_a0, U_Slave_a1, U_Slave_a2) &
   ex2 W_Master_a0_s, W_Slave_a2_s :
   ex2 W_up, W_down :
   ex1 w_top :
     included_1(W_Master_a0_s, U_Master_a0) &
     included_1(W_Slave_a2_s, U_Slave_a2) &
     ~intersects_1(W_down, W_up) &
     partition_2(W_down, W_Master_a0_s, W_Slave_a2_s) &
     (w_top in W_down) &
     (0 in W_down => w_top = 0) &
     (all1 w : (w in W_down & w ~= w_top) => w-1 in W_down) &
     (all1 w1, w2: (w1 in W_down & w1 ~= 0 &
                    w2 in W_down & w2 ~= 0 & w1-1 = w2-1) => w1 = w2) &
     (all1 w: (w in W_Master_a0_s) =>
       (w+1 in W_Slave_a2_s)) &
     u0 in W_Master_a0_s &
     u1 in W_Slave_a2_s &
     (all1 w : w in W_Slave_a2_s => w = u1);


pred path_Slave_a1_m_Master_a0_m
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var1 u0, u1) =
   backbone_tree
     (U_Master_a0, U_Slave_a1, U_Slave_a2) &
   ex2 W_Slave_a1_m, W_Master_a0_m :
   ex2 W_up, W_down :
   ex1 w_top :
     included_1(W_Slave_a1_m, U_Slave_a1) &
     included_1(W_Master_a0_m, U_Master_a0) &
     ~intersects_1(W_down, W_up) &
     partition_1(W_down, W_Master_a0_m) &
     (w_top in W_down) &
     (0 in W_down => w_top = 0) &
     (all1 w : (w in W_down & w ~= w_top) => w-1 in W_down) &
     (all1 w1, w2: (w1 in W_down & w1 ~= 0 &
                    w2 in W_down & w2 ~= 0 & w1-1 = w2-1) => w1 = w2) &
     partition_1(W_up, W_Slave_a1_m) &
     (all1 w : w in W_up => (w-1 in W_up | w-1 = w_top)) &
     (all1 w1, w2: (w1 in W_up & w1 ~= 0 &
                    w2 in W_up & w2 ~= 0 & w1-1 = w2-1) => w1 = w2) &
     (all1 w: (w in W_Slave_a1_m) =>
       (w-1 in W_Master_a0_m | w-1 in W_Slave_a1_m)) &
     u0 in W_Slave_a1_m &
     u1 in W_Master_a0_m &
     (all1 w : w in W_Master_a0_m => w = u1);


pred path_Slave_a1_s1_Slave_a1_s
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var1 u0, u1) =
   backbone_tree
     (U_Master_a0, U_Slave_a1, U_Slave_a2) &
   ex2 W_Slave_a1_s1, W_Slave_a1_s :
   ex2 W_up, W_down :
   ex1 w_top :
     included_1(W_Slave_a1_s1, U_Slave_a1) &
     included_1(W_Slave_a1_s, U_Slave_a1) &
     ~intersects_1(W_down, W_up) &
     partition_2(W_down, W_Slave_a1_s1, W_Slave_a1_s) &
     (w_top in W_down) &
     (0 in W_down => w_top = 0) &
     (all1 w : (w in W_down & w ~= w_top) => w-1 in W_down) &
     (all1 w1, w2: (w1 in W_down & w1 ~= 0 &
                    w2 in W_down & w2 ~= 0 & w1-1 = w2-1) => w1 = w2) &
     (all1 w: (w in W_Slave_a1_s1) =>
       (w+1 in W_Slave_a1_s)) &
     u0 in W_Slave_a1_s1 &
     u1 in W_Slave_a1_s &
     (all1 w : w in W_Slave_a1_s => w = u1);


pred path_Slave_a1_s1_Slave_a2_s
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var1 u0, u1) =
   backbone_tree
     (U_Master_a0, U_Slave_a1, U_Slave_a2) &
   ex2 W_Slave_a1_s1, W_Slave_a2_s :
   ex2 W_up, W_down :
   ex1 w_top :
     included_1(W_Slave_a1_s1, U_Slave_a1) &
     included_1(W_Slave_a2_s, U_Slave_a2) &
     ~intersects_1(W_down, W_up) &
     partition_2(W_down, W_Slave_a1_s1, W_Slave_a2_s) &
     (w_top in W_down) &
     (0 in W_down => w_top = 0) &
     (all1 w : (w in W_down & w ~= w_top) => w-1 in W_down) &
     (all1 w1, w2: (w1 in W_down & w1 ~= 0 &
                    w2 in W_down & w2 ~= 0 & w1-1 = w2-1) => w1 = w2) &
     (all1 w: (w in W_Slave_a1_s1) =>
       (w+1 in W_Slave_a2_s)) &
     u0 in W_Slave_a1_s1 &
     u1 in W_Slave_a2_s &
     (all1 w : w in W_Slave_a2_s => w = u1);


pred path_Slave_a2_m_Master_a0_m
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var1 u0, u1) =
   backbone_tree
     (U_Master_a0, U_Slave_a1, U_Slave_a2) &
   ex2 W_Slave_a2_m, W_Master_a0_m, W_Slave_a1_m :
   ex2 W_up, W_down :
   ex1 w_top :
     included_1(W_Slave_a2_m, U_Slave_a2) &
     included_1(W_Master_a0_m, U_Master_a0) &
     included_1(W_Slave_a1_m, U_Slave_a1) &
     ~intersects_1(W_down, W_up) &
     partition_1(W_down, W_Master_a0_m) &
     (w_top in W_down) &
     (0 in W_down => w_top = 0) &
     (all1 w : (w in W_down & w ~= w_top) => w-1 in W_down) &
     (all1 w1, w2: (w1 in W_down & w1 ~= 0 &
                    w2 in W_down & w2 ~= 0 & w1-1 = w2-1) => w1 = w2) &
     partition_2(W_up, W_Slave_a2_m, W_Slave_a1_m) &
     (all1 w : w in W_up => (w-1 in W_up | w-1 = w_top)) &
     (all1 w1, w2: (w1 in W_up & w1 ~= 0 &
                    w2 in W_up & w2 ~= 0 & w1-1 = w2-1) => w1 = w2) &
     (all1 w: (w in W_Slave_a2_m) =>
       (w-1 in W_Master_a0_m | w-1 in W_Slave_a1_m)) &
     (all1 w: (w in W_Slave_a1_m) =>
       (w-1 in W_Master_a0_m | w-1 in W_Slave_a1_m)) &
     u0 in W_Slave_a2_m &
     u1 in W_Master_a0_m &
     (all1 w : w in W_Master_a0_m => w = u1);



#
# trap invariants
#



pred trap_initially_not_empty
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
   ext_configuration
     (U_Master_a0, U_Slave_a1, U_Slave_a2,
      X_m_q0, X_m_q1, X_s_q0, X_s_q1) &
   ((ex1 x : x in U_Master_a0 & x in X_m_q0) |
    (ex1 x : x in U_Slave_a1 & x in X_s_q0) |
    (ex1 x : x in U_Slave_a2 & x in X_s_q0));

pred trap_Slave_a1_m_snd_s_rcv_0_flow
  (var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1,
   var1 x_m, x_s) =
   ((x_m in X_m_q0 | x_s in X_s_q0) =>
    (x_m in X_m_q1 | x_s in X_s_q1));

pred trap_Slave_a1_m_snd_s_rcv_flow
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
  (all1 x_0, x_m, x_s :
    (x_0 in U_Slave_a1 & 
     x_0 = x_s & 
     path_Slave_a1_m_Master_a0_m
       (U_Master_a0, U_Slave_a1, U_Slave_a2, x_0, x_m)) =>
    trap_Slave_a1_m_snd_s_rcv_0_flow
      (X_m_q0, X_m_q1, X_s_q0, X_s_q1,
       x_m, x_s)) ;

pred trap_Slave_a1_s_snd_m_rcv_0_flow
  (var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1,
   var1 x_s, x_m) =
   ((x_s in X_s_q1 | x_m in X_m_q1) =>
    (x_s in X_s_q0 | x_m in X_m_q0));

pred trap_Slave_a1_s_snd_m_rcv_flow
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
  (all1 x_0, x_s, x_m :
    (x_0 in U_Slave_a1 & 
     x_0 = x_s & 
     path_Slave_a1_m_Master_a0_m
       (U_Master_a0, U_Slave_a1, U_Slave_a2, x_0, x_m)) =>
    trap_Slave_a1_s_snd_m_rcv_0_flow
      (X_m_q0, X_m_q1, X_s_q0, X_s_q1,
       x_s, x_m)) ;

pred trap_Slave_a2_m_snd_s_rcv_0_flow
  (var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1,
   var1 x_m, x_s) =
   ((x_m in X_m_q0 | x_s in X_s_q0) =>
    (x_m in X_m_q1 | x_s in X_s_q1));

pred trap_Slave_a2_m_snd_s_rcv_flow
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
  (all1 x_0, x_m, x_s :
    (x_0 in U_Slave_a2 & 
     x_0 = x_s & 
     path_Slave_a2_m_Master_a0_m
       (U_Master_a0, U_Slave_a1, U_Slave_a2, x_0, x_m)) =>
    trap_Slave_a2_m_snd_s_rcv_0_flow
      (X_m_q0, X_m_q1, X_s_q0, X_s_q1,
       x_m, x_s)) ;

pred trap_Slave_a2_s_snd_m_rcv_0_flow
  (var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1,
   var1 x_s, x_m) =
   ((x_s in X_s_q1 | x_m in X_m_q1) =>
    (x_s in X_s_q0 | x_m in X_m_q0));

pred trap_Slave_a2_s_snd_m_rcv_flow
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
  (all1 x_0, x_s, x_m :
    (x_0 in U_Slave_a2 & 
     x_0 = x_s & 
     path_Slave_a2_m_Master_a0_m
       (U_Master_a0, U_Slave_a1, U_Slave_a2, x_0, x_m)) =>
    trap_Slave_a2_s_snd_m_rcv_0_flow
      (X_m_q0, X_m_q1, X_s_q0, X_s_q1,
       x_s, x_m)) ;

pred trap_flow
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
  ext_configuration
    (U_Master_a0, U_Slave_a1, U_Slave_a2,
     X_m_q0, X_m_q1, X_s_q0, X_s_q1) &
  trap_Slave_a1_m_snd_s_rcv_flow
    (U_Master_a0, U_Slave_a1, U_Slave_a2,
     X_m_q0, X_m_q1, X_s_q0, X_s_q1)  &
  trap_Slave_a1_s_snd_m_rcv_flow
    (U_Master_a0, U_Slave_a1, U_Slave_a2,
     X_m_q0, X_m_q1, X_s_q0, X_s_q1)  &
  trap_Slave_a2_m_snd_s_rcv_flow
    (U_Master_a0, U_Slave_a1, U_Slave_a2,
     X_m_q0, X_m_q1, X_s_q0, X_s_q1)  &
  trap_Slave_a2_s_snd_m_rcv_flow
    (U_Master_a0, U_Slave_a1, U_Slave_a2,
     X_m_q0, X_m_q1, X_s_q0, X_s_q1) ;

pred trap_constraints
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 Z_m_q0, Z_m_q1, Z_s_q0, Z_s_q1) =
   ext_configuration
     (U_Master_a0, U_Slave_a1, U_Slave_a2,
      Z_m_q0, Z_m_q1, Z_s_q0, Z_s_q1) &
   trap_initially_not_empty
     (U_Master_a0, U_Slave_a1, U_Slave_a2,
      Z_m_q0, Z_m_q1, Z_s_q0, Z_s_q1) &
   trap_flow
     (U_Master_a0, U_Slave_a1, U_Slave_a2,
      Z_m_q0, Z_m_q1, Z_s_q0, Z_s_q1);

pred trap_invariant
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
   configuration
     (U_Master_a0, U_Slave_a1, U_Slave_a2,
      X_m_q0, X_m_q1, X_s_q0, X_s_q1) &
   all2 Z_m_q0, Z_m_q1, Z_s_q0, Z_s_q1:
     trap_constraints
       (U_Master_a0, U_Slave_a1, U_Slave_a2,
        Z_m_q0, Z_m_q1, Z_s_q0, Z_s_q1) =>
     intersects_4
       (Z_m_q0, Z_m_q1, Z_s_q0, Z_s_q1,
        X_m_q0, X_m_q1, X_s_q0, X_s_q1);



#
# deadlock
#



pred disabled_Slave_a1_m_snd_s_rcv_0_flow
  (var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1,
   var1 x_m, x_s) =
   (x_m notin X_m_q0 | x_s notin X_s_q0);

pred disabled_Slave_a1_m_snd_s_rcv_flow
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
  (all1 x_0, x_m, x_s :
    (x_0 in U_Slave_a1 & 
     x_0 = x_s & 
     path_Slave_a1_m_Master_a0_m
       (U_Master_a0, U_Slave_a1, U_Slave_a2, x_0, x_m)) =>
    disabled_Slave_a1_m_snd_s_rcv_0_flow
      (X_m_q0, X_m_q1, X_s_q0, X_s_q1,
       x_m, x_s)) ;

pred disabled_Slave_a1_s_snd_m_rcv_0_flow
  (var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1,
   var1 x_s, x_m) =
   (x_s notin X_s_q1 | x_m notin X_m_q1);

pred disabled_Slave_a1_s_snd_m_rcv_flow
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
  (all1 x_0, x_s, x_m :
    (x_0 in U_Slave_a1 & 
     x_0 = x_s & 
     path_Slave_a1_m_Master_a0_m
       (U_Master_a0, U_Slave_a1, U_Slave_a2, x_0, x_m)) =>
    disabled_Slave_a1_s_snd_m_rcv_0_flow
      (X_m_q0, X_m_q1, X_s_q0, X_s_q1,
       x_s, x_m)) ;

pred disabled_Slave_a2_m_snd_s_rcv_0_flow
  (var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1,
   var1 x_m, x_s) =
   (x_m notin X_m_q0 | x_s notin X_s_q0);

pred disabled_Slave_a2_m_snd_s_rcv_flow
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
  (all1 x_0, x_m, x_s :
    (x_0 in U_Slave_a2 & 
     x_0 = x_s & 
     path_Slave_a2_m_Master_a0_m
       (U_Master_a0, U_Slave_a1, U_Slave_a2, x_0, x_m)) =>
    disabled_Slave_a2_m_snd_s_rcv_0_flow
      (X_m_q0, X_m_q1, X_s_q0, X_s_q1,
       x_m, x_s)) ;

pred disabled_Slave_a2_s_snd_m_rcv_0_flow
  (var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1,
   var1 x_s, x_m) =
   (x_s notin X_s_q1 | x_m notin X_m_q1);

pred disabled_Slave_a2_s_snd_m_rcv_flow
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
  (all1 x_0, x_s, x_m :
    (x_0 in U_Slave_a2 & 
     x_0 = x_s & 
     path_Slave_a2_m_Master_a0_m
       (U_Master_a0, U_Slave_a1, U_Slave_a2, x_0, x_m)) =>
    disabled_Slave_a2_s_snd_m_rcv_0_flow
      (X_m_q0, X_m_q1, X_s_q0, X_s_q1,
       x_s, x_m)) ;

pred disabled_flow
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
  ext_configuration
    (U_Master_a0, U_Slave_a1, U_Slave_a2,
     X_m_q0, X_m_q1, X_s_q0, X_s_q1) &
  disabled_Slave_a1_m_snd_s_rcv_flow
    (U_Master_a0, U_Slave_a1, U_Slave_a2,
     X_m_q0, X_m_q1, X_s_q0, X_s_q1)  &
  disabled_Slave_a1_s_snd_m_rcv_flow
    (U_Master_a0, U_Slave_a1, U_Slave_a2,
     X_m_q0, X_m_q1, X_s_q0, X_s_q1)  &
  disabled_Slave_a2_m_snd_s_rcv_flow
    (U_Master_a0, U_Slave_a1, U_Slave_a2,
     X_m_q0, X_m_q1, X_s_q0, X_s_q1)  &
  disabled_Slave_a2_s_snd_m_rcv_flow
    (U_Master_a0, U_Slave_a1, U_Slave_a2,
     X_m_q0, X_m_q1, X_s_q0, X_s_q1) ;

pred deadlock
  (var2 U_Master_a0, U_Slave_a1, U_Slave_a2,
   var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1) =
   configuration
     (U_Master_a0, U_Slave_a1, U_Slave_a2,
      X_m_q0, X_m_q1, X_s_q0, X_s_q1) &
   disabled_flow
     (U_Master_a0, U_Slave_a1, U_Slave_a2,
      X_m_q0, X_m_q1, X_s_q0, X_s_q1);


#
# assertions checking
#

var2 U_Master_a0, U_Slave_a1, U_Slave_a2;

var2 X_m_q0, X_m_q1, X_s_q0, X_s_q1;

trap_invariant
  (U_Master_a0, U_Slave_a1, U_Slave_a2,
   X_m_q0, X_m_q1, X_s_q0, X_s_q1) &
deadlock
  (U_Master_a0, U_Slave_a1, U_Slave_a2,
   X_m_q0, X_m_q1, X_s_q0, X_s_q1);
